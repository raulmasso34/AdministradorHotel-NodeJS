<!doctype html>
<html lang="es" data-theme="light">
<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  
  <!-- BoxIcons -->
  <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
  
  <!-- CSS personalizado -->
  <link rel="stylesheet" href="/static/css/formularios.css">
  
  <title>Editar Reserva</title>
</head>
<body>
  <% if (reserva) { %>
  <div class="container mt-4">
    <div class="card border-secondary mb-5">
      <div class="card-header">
        <i class='bx bx-calendar-edit me-2'></i> Editar Reserva
      </div>
      <div class="card-body">
        <form action="/updatereserva" method="POST">
          <input type="hidden" id="Id_Reserva" name="Id_Reserva" value="<%= reserva.Id_Reserva %>">
          
          <div class="row">
            <div class="col-md-6 mb-3">
              <label for="Id_Hotel" class="form-label required-field">Hotel</label>
              <div class="input-group">
                <span class="input-group-text"><i class='bx bx-hotel'></i></span>
                <select name="Id_Hotel" id="Id_Hotel" class="form-select">
                  <% hoteles.forEach(hotel => { %>
                    <option value="<%= hotel.Id_Hotel %>" <%= hotel.Id_Hotel == reserva.Id_Hotel ? 'selected' : '' %>>
                      <%= hotel.Nombre %>
                    </option>
                  <% }); %>
                </select>
              </div>
            </div>
            
            <div class="col-md-6 mb-3">
              <label for="Id_Habitacion" class="form-label required-field">Habitación</label>
              <div class="input-group">
                <span class="input-group-text"><i class='bx bx-bed'></i></span>
                <select name="Id_Habitacion" id="Id_Habitacion" class="form-select">
                  <% habitaciones.forEach(habitacion => { %>
                    <option value="<%= habitacion.Id_Habitaciones %>" <%= habitacion.Id_Habitaciones == reserva.Id_Habitacion ? 'selected' : '' %>>
                      <%= habitacion.Tipo %>
                    </option>
                  <% }); %>
                </select>
              </div>
            </div>
          </div>
          
          <div class="row">
            <div class="col-md-6 mb-3">
              <label for="Id_Actividad" class="form-label">Actividad</label>
              <div class="input-group">
                <span class="input-group-text"><i class='bx bx-calendar-event'></i></span>
                <select name="Id_Actividad" id="Id_Actividad" class="form-select">
                  <% actividades.forEach(actividad => { %>
                    <option value="<%= actividad.Id_Actividades %>" <%= actividad.Id_Actividades == reserva.Id_Actividad ? 'selected' : '' %>>
                      <%= actividad.Actividad %>
                    </option>
                  <% }); %>
                </select>
              </div>
            </div>
            
            <div class="col-md-6 mb-3">
              <label for="Id_Servicio" class="form-label">Servicios</label>
              <div class="input-group">
                <span class="input-group-text"><i class='bx bx-server'></i></span>
                <select name="Id_Servicio" id="Id_Servicio" class="form-select">
                  <% servicios.forEach(servicio => { %>
                    <option value="<%= servicio.Id_Servicio %>" <%= servicio.Id_Servicio == reserva.Id_Servicio ? 'selected' : '' %>>
                      <%= servicio.Servicio %>
                    </option>
                  <% }); %>
                </select>
              </div>
            </div>
          </div>
          
          <div class="row">
            <div class="col-md-6 mb-3">
              <label for="Checkin" class="form-label required-field">Fecha de Check-in</label>
              <div class="input-group">
                <span class="input-group-text"><i class='bx bx-calendar'></i></span>
                <input type="date" class="form-control" id="Checkin" name="Checkin" value="<%= new Date(reserva.Checkin).toISOString().split('T')[0] %>">
              </div>
            </div>
            
            <div class="col-md-6 mb-3">
              <label for="Checkout" class="form-label required-field">Fecha de Checkout</label>
              <div class="input-group">
                <span class="input-group-text"><i class='bx bx-calendar-check'></i></span>
                <input type="date" class="form-control" id="Checkout" name="Checkout" value="<%= new Date(reserva.Checkout).toISOString().split('T')[0] %>">
              </div>
            </div>
          </div>
          
          <div class="row">
            <div class="col-md-6 mb-3">
              <label for="Numero_Personas" class="form-label required-field">Número de personas</label>
              <div class="input-group">
                <span class="input-group-text"><i class='bx bx-group'></i></span>
                <input type="number" class="form-control" id="Numero_Personas" name="Numero_Personas" value="<%= reserva.Numero_Personas %>">
              </div>
            </div>
            
            <div class="col-md-6 mb-3">
              <label for="Id_Tarifa" class="form-label required-field">Tarifa</label>
              <div class="input-group">
                <span class="input-group-text"><i class='bx bx-money'></i></span>
                <select name="Id_Tarifa" id="Id_Tarifa" class="form-select">
                  <% tarifas.forEach(tarifa => { %>
                    <option value="<%= tarifa.Id_Tarifa %>" <%= tarifa.Id_Tarifa == reserva.Id_Tarifa ? 'selected' : '' %>>
                      <%= tarifa.Temporada %>
                    </option>
                  <% }); %>
                </select>
              </div>
            </div>
          </div>
          
          <div class="mt-4 d-flex gap-2">
            <button type="submit" class="btn btn-primary">
              <i class='bx bx-save me-1'></i> Guardar Cambios
            </button>
            <a href="/informacion/<%= reserva.Id_Cliente %>" class="btn btn-secondary">
              <i class='bx bx-arrow-back me-1'></i> Cancelar
            </a>
          </div>
        </form>
      </div>
    </div>
  </div>
  <% } %>
  
  <!-- Botón para cambiar tema -->
  <button class="theme-toggle" id="themeToggle">
    <i class='bx bx-moon'></i>
  </button>

  <!-- Bootstrap Bundle con Popper -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
  
  <!-- Script personalizado -->
  <script>
    // Theme toggle
    document.getElementById('themeToggle').addEventListener('click', function() {
      const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
      const newTheme = currentTheme === 'light' ? 'dark' : 'light';
      
      document.documentElement.setAttribute('data-theme', newTheme);
      
      // Cambiar el icono
      this.querySelector('i').classList.toggle('bx-moon');
      this.querySelector('i').classList.toggle('bx-sun');
      
      // Guardar preferencia en localStorage
      localStorage.setItem('theme', newTheme);
    });
    
    // Cargar tema guardado
    document.addEventListener('DOMContentLoaded', function() {
      const savedTheme = localStorage.getItem('theme') || 'light';
      document.documentElement.setAttribute('data-theme', savedTheme);
      
      // Actualizar icono según tema
      if (savedTheme === 'dark') {
        document.querySelector('#themeToggle i').classList.remove('bx-moon');
        document.querySelector('#themeToggle i').classList.add('bx-sun');
      }
      
      // Validación básica del formulario
      const form = document.querySelector('form');
      form.addEventListener('submit', function(event) {
        let valid = true;
        
        // Validar fechas
        const checkinDate = new Date(document.getElementById('Checkin').value);
        const checkoutDate = new Date(document.getElementById('Checkout').value);
        
        if (checkinDate >= checkoutDate) {
          valid = false;
          const checkoutInput = document.getElementById('Checkout');
          checkoutInput.classList.add('is-invalid');
          
          // Crear mensaje de error específico para fecha
          if (!checkoutInput.nextElementSibling || !checkoutInput.nextElementSibling.classList.contains('invalid-feedback')) {
            const feedback = document.createElement('div');
            feedback.classList.add('invalid-feedback');
            feedback.textContent = 'La fecha de checkout debe ser posterior a la fecha de check-in';
            checkoutInput.parentNode.appendChild(feedback);
          }
        }
        
        // Validar número de personas
        const personasInput = document.getElementById('Numero_Personas');
        const personas = parseInt(personasInput.value);
        
        if (isNaN(personas) || personas <= 0) {
          valid = false;
          personasInput.classList.add('is-invalid');
          
          // Crear mensaje de error específico
          if (!personasInput.nextElementSibling || !personasInput.nextElementSibling.classList.contains('invalid-feedback')) {
            const feedback = document.createElement('div');
            feedback.classList.add('invalid-feedback');
            feedback.textContent = 'El número de personas debe ser mayor que cero';
            personasInput.parentNode.appendChild(feedback);
          }
        }
        
        if (!valid) {
          event.preventDefault();
        }
      });
      
      // Eliminar clases de validación cuando se modifica el campo
      const inputs = document.querySelectorAll('input, select');
      inputs.forEach(input => {
        input.addEventListener('input', function() {
          this.classList.remove('is-invalid');
          if (this.value.trim()) {
            this.classList.add('is-valid');
          }
        });
      });
    });
  </script>
</body>
</html>