<!doctype html>
<html lang="es" data-theme="light">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

  <!-- BoxIcons -->
  <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  
  <link rel="stylesheet" href="/static/css/formularios.css">


  <title>Editar Hotel</title>
</head>
<body>
  <!-- Barra de navegación -->

  <!-- Formulario de Edición de Hotel -->
  <% if (hotel) { %>
    <div class="container mt-4">
      <div class="card border-secondary mb-5">
        <div class="card-header">
          <i class='bx bx-edit me-2'></i> Editar Hotel
        </div>
        <div class="card-body">
          <form action="/updateh" method="POST">
            <input type="hidden" id="Id_Hotel" name="Id_Hotel" value="<%= hotel.Id_Hotel %>">
            
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="Nombre" class="form-label required-field">Nombre</label>
                <div class="input-group">
                  <span class="input-group-text"><i class='bx bx-building'></i></span>
                  <input type="text" class="form-control" id="Nombre" name="Nombre" tabindex="1" required value="<%= hotel.Nombre %>">
                </div>
              </div>
              
              <div class="col-md-6 mb-3">
                <label for="CorreoElectronico" class="form-label required-field">Correo Electrónico</label>
                <div class="input-group">
                  <span class="input-group-text"><i class='bx bx-envelope'></i></span>
                  <input type="email" class="form-control" id="CorreoElectronico" name="CorreoElectronico" tabindex="2" required value="<%= hotel.CorreoElectronico %>">
                </div>
              </div>
            </div>
            
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="Telefono" class="form-label required-field">Teléfono</label>
                <div class="input-group">
                  <span class="input-group-text"><i class='bx bx-phone'></i></span>
                  <input type="text" class="form-control" id="Telefono" name="Telefono" tabindex="3" required value="<%= hotel.Telefono %>">
                </div>
              </div>
              
              <div class="col-md-6 mb-3">
                <label for="Direccion" class="form-label required-field">Dirección</label>
                <div class="input-group">
                  <span class="input-group-text"><i class='bx bx-map'></i></span>
                  <input type="text" class="form-control" id="Direccion" name="Direccion" tabindex="4" required value="<%= hotel.Direccion %>">
                </div>
              </div>
            </div>
            
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="Id_Pais" class="form-label required-field">País</label>
                <div class="input-group">
                  <span class="input-group-text"><i class='bx bx-globe'></i></span>
                  <select name="Id_Pais" id="Id_Pais" class="form-select" tabindex="5" required>
                    <% countries.forEach(country => { %>
                      <option value="<%= country.Id_Pais %>" <%= hotel.Id_Pais === country.Id_Pais ? 'selected' : '' %>>
                        <%= country.Pais %>
                      </option>
                    <% }); %>
                  </select>
                </div>
              </div>
              
              <div class="col-md-6 mb-3 position-relative">
                <label for="Ciudad" class="form-label required-field">Ciudad</label>
                <div class="input-group">
                  <span class="input-group-text"><i class='bx bx-building-house'></i></span>
                  <input type="text" class="form-control" id="Ciudad" name="Ciudad" tabindex="6" required value="<%= hotel.Ciudad %>">
                </div>
                <div id="autocomplete-list" class="autocomplete-list list-group"></div>
              </div>
            </div>
            
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="CodigoPostal" class="form-label required-field">Código Postal</label>
                <div class="input-group">
                  <span class="input-group-text"><i class='bx bx-map-pin'></i></span>
                  <input type="text" class="form-control" id="CodigoPostal" name="CodigoPostal" tabindex="7" maxlength="5" required value="<%= hotel.CodigoPostal %>">
                </div>
              </div>
              
              <div class="col-md-6 mb-3">
                <label for="Estrellas" class="form-label required-field">Estrellas</label>
                <div class="input-group">
                  <span class="input-group-text"><i class='bx bx-star'></i></span>
                  <input type="number" max="5" min="1" class="form-control" id="Estrellas" name="Estrellas" tabindex="8" required value="<%= hotel.Estrellas %>">
                </div>
              </div>
            </div>
            
            <div class="mt-4 d-flex gap-2">
              <button type="submit" class="btn btn-primary" tabindex="9">
                <i class='bx bx-save me-1'></i> Guardar
              </button>
              <% if (user && user.role === 'Hotel') { %>
                <a class="btn btn-secondary" href="/hotel/<%= user.id_hotel %>" tabindex="10">
                  <i class='bx bx-arrow-back me-1'></i> Cancelar
                </a>
              <% } else if (user && user.role === 'General') { %>
                <a href="/hoteles/" class="btn btn-secondary" tabindex="10">
                  <i class='bx bx-arrow-back me-1'></i> Cancelar
                </a>
              <% } %>
            </div>
          </form>
        </div>
      </div>
    </div>
  <% } %>

  <!-- Botón para cambiar tema -->
  <button class="theme-toggle" id="themeToggle">
    <i class='bx bx-moon'></i>
  </button>

  <!-- Bootstrap Bundle con Popper -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

  <!-- Script personalizado -->
  <script>
    // Theme toggle
    document.getElementById('themeToggle').addEventListener('click', function() {
      const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
      const newTheme = currentTheme === 'light' ? 'dark' : 'light';
      
      document.documentElement.setAttribute('data-theme', newTheme);
      
      // Cambiar el icono
      this.querySelector('i').classList.toggle('bx-moon');
      this.querySelector('i').classList.toggle('bx-sun');
      
      // Guardar preferencia en localStorage
      localStorage.setItem('theme', newTheme);
    });
    
    // Cargar tema guardado
    document.addEventListener('DOMContentLoaded', function() {
      const savedTheme = localStorage.getItem('theme') || 'light';
      document.documentElement.setAttribute('data-theme', savedTheme);
      
      // Actualizar icono según tema
      if (savedTheme === 'dark') {
        document.querySelector('#themeToggle i').classList.remove('bx-moon');
        document.querySelector('#themeToggle i').classList.add('bx-sun');
      }
      
      // Validación básica del formulario
      const form = document.querySelector('form');
      form.addEventListener('submit', function(event) {
        let valid = true;
        const requiredInputs = document.querySelectorAll('input[required], select[required]');
        
        requiredInputs.forEach(input => {
          if (!input.value.trim()) {
            valid = false;
            input.classList.add('is-invalid');
            
            // Crear mensaje de error si no existe
            if (!input.nextElementSibling || !input.nextElementSibling.classList.contains('invalid-feedback')) {
              const feedback = document.createElement('div');
              feedback.classList.add('invalid-feedback');
              feedback.textContent = 'Este campo es obligatorio';
              input.parentNode.appendChild(feedback);
            }
          } else {
            input.classList.remove('is-invalid');
            input.classList.add('is-valid');
          }
        });
        
        // Validar correo electrónico
        const emailInput = document.getElementById('CorreoElectronico');
        if (emailInput.value && !validateEmail(emailInput.value)) {
          valid = false;
          emailInput.classList.add('is-invalid');
          
          // Crear mensaje de error específico para email
          if (!emailInput.nextElementSibling || !emailInput.nextElementSibling.classList.contains('invalid-feedback')) {
            const feedback = document.createElement('div');
            feedback.classList.add('invalid-feedback');
            feedback.textContent = 'Por favor, introduce un correo electrónico válido';
            emailInput.parentNode.appendChild(feedback);
          }
        }
        
        // Validar teléfono
        const phoneInput = document.getElementById('Telefono');
        if (phoneInput.value && !validatePhone(phoneInput.value)) {
          valid = false;
          phoneInput.classList.add('is-invalid');
          
          if (!phoneInput.nextElementSibling || !phoneInput.nextElementSibling.classList.contains('invalid-feedback')) {
            const feedback = document.createElement('div');
            feedback.classList.add('invalid-feedback');
            feedback.textContent = 'Por favor, introduce un teléfono válido (9 dígitos)';
            phoneInput.parentNode.appendChild(feedback);
          }
        }
        
        // Validar código postal
        const cpInput = document.getElementById('CodigoPostal');
        if (cpInput.value && !validatePostalCode(cpInput.value)) {
          valid = false;
          cpInput.classList.add('is-invalid');
          
          if (!cpInput.nextElementSibling || !cpInput.nextElementSibling.classList.contains('invalid-feedback')) {
            const feedback = document.createElement('div');
            feedback.classList.add('invalid-feedback');
            feedback.textContent = 'Por favor, introduce un código postal válido (5 dígitos)';
            cpInput.parentNode.appendChild(feedback);
          }
        }
        
        if (!valid) {
          event.preventDefault();
        }
      });
      
      // Eliminar clases de validación cuando se modifica el campo
      const inputs = document.querySelectorAll('input, select');
      inputs.forEach(input => {
        input.addEventListener('input', function() {
          this.classList.remove('is-invalid');
          if (this.value.trim()) {
            this.classList.add('is-valid');
          }
        });
      });
    });
    
    // Validar formato de correo electrónico
    function validateEmail(email) {
      const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      return re.test(email.toLowerCase());
    }
    
    // Validación de código postal español
    function validatePostalCode(cp) {
      return /^[0-9]{5}$/.test(cp);
    }
    
    // Validación de teléfono español
    function validatePhone(phone) {
      return /^[0-9]{9}$/.test(phone);
    }
  </script>
</body>
</html>